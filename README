Connectome File Format Library

Multi-Modal Neuroimaging Python Library for Data Input / Output and interlinking for

* metadata (XML)
* networks (GraphML, GEXF)
* surfaces (Gifti)
* volumes (Nifti)
* fiber tracks (TrackVis)
* time series (HDF5)

Generate classes with: 
python /home/stephan/Dev/Python/generateDS-2.1a/generateDS.py --subclass-suffix="" -f --super="cff" -o /home/stephan/Dev/PyWorkspace/cfflib/schema/gen/cff.py -s /home/stephan/Dev/PyWorkspace/cfflib/schema/gen/cfflib.py /home/stephan/Dev/PyWorkspace/cfflib/schema/connectome.xsd

Documentation:
http://www.rexx.com/~dkuhlman/generateDS.html

Load a meta.xml file::

	import cfflib
	a = cfflib.parse('/home/stephan/Dev/PyWorkspace/cfflib/datasets/meta.xml')

Export the file::

	f = open('output.xml', 'w')
	f.write('<?xml version="1.0" encoding="UTF-8"?>\n')
	a.export(f, 0, namespacedef_='xmlns="http://www.connectomics.ch/2010/Connectome/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.connectomics.ch/2010/Connectome/xmlns connectome.xsd"')
	f.close()
	

Dependencies
------------

* Nibabel
* numexpr
* PyTables
* NumPy
* lxml
* pygexf

In cfflib
---------
* [METHOD] validate file existence
* [METHOD] validate file type
* e.g. in a python-script, write: import cfflib
* [METHOD] adder (=setter?) methods for objects (or just add to a list?)
* [METHOD] remover methods for objects (or just remove from a list?)
* [METHOD] info method about available optional dependencies
* [METHOD] .save / .load cff
* lazy loading data
* [METHOD] meaningful getter method for objects based on meta-data attributes
* [METHOD] extract all zip file content to path
* [METHOD] extract all zip file content to path and rereference all file links
* [METHOD] load all data into memory
* load scripts as stringIO / string object
* lazy load, lazy memorymap load?
